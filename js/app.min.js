"use strict";angular.module("F1Feed",["ngRoute","F1Feed.controllers","F1Feed.services","ngSanitize"]),angular.module("F1Feed").config(["$routeProvider",function(a){a.when("/standings/:year/:standingsFor",{controller:"StandingsCtrl",templateUrl:function(a){return"partials/"+a.standingsFor+"Standings.tpl.html"}}),a.when("/standings/:year/:round/:standingsFor",{controller:"StandingsCtrl",templateUrl:function(a){return"partials/"+a.standingsFor+"Standings.tpl.html"}}),a.when("/:year/constructors",{controller:"ConstructorsCtrl",templateUrl:"partials/constructorsList.tpl.html"}),a.when("/:year/constructor/:constructor_id",{controller:"ConstructorsCtrl",templateUrl:"partials/constructorDetails.tpl.html"}),a.when("/:year/constructor/:constructor_id/:filter",{controller:"ConstructorsCtrl",templateUrl:"partials/constructorDetails.tpl.html"}),a.when("/info/:year/drivers",{controller:"DriversCtrl",templateUrl:"partials/drivers.tpl.html"}),a.when("/info/:year/driver/:driverID",{controller:"DriversCtrl",templateUrl:"partials/driverDetails.tpl.html"}),a.when("/info/:year/circuits",{controller:"CircuitsCtrl",templateUrl:"partials/circuits.tpl.html"}),a.when("/",{controller:"DashboardCtrl",templateUrl:"partials/dashboard.tpl.html"}),a.otherwise({redirectTo:"/"})}]);var StandingsList=[],ConstructorsList=[],DriversList=[],CircuitsList=[],nextEvent=[],prevEventResults=[],DriverStatus=[];angular.module("F1Feed.controllers",[]).controller("MainCtrl",["$scope",function(a){function b(){var a=new Date;return a.getFullYear()}a.currentYear=b()}]).controller("StandingsCtrl",["$scope","ergastAPIservice","$routeParams",function(a,b,c){a.$routeParams=c;var d=c.year,e=c.round,f=c.standingsFor;0===StandingsList.length?b.getStandings(d,e,f).success(function(b){a.StandingsList=StandingsList="driver"===f?b.MRData.StandingsTable.StandingsLists[0].DriverStandings:b.MRData.StandingsTable.StandingsLists[0].ConstructorStandings}):a.StandingsList=StandingsList}]).controller("ConstructorsCtrl",["$scope","ergastAPIservice","$routeParams",function(a,b,c){a.ConstructorsList=[],a.season="",a.constructor_id="",a.$routeParams=c;var d=c.year,e=c.constructor_id,f=c.filter;b.getConstructors(d,e,f).success(function(b){if(e||(a.ConstructorsList=ConstructorsList=b.MRData.ConstructorTable.Constructors),e)switch(a.constructor_id=e,a.year=d,f){case"circuits":a.ConstructorsList=ConstructorsList=b.MRData.CircuitTable.Circuits;break;case"drivers":a.ConstructorsList=b.MRData.DriverTable.Drivers;break;case"grid":a.ConstructorsList=b.MRData.StatusTable.Status;break;case"results":a.ConstructorsList=b.MRData.RaceTable.Races;break;case"fastest":a.ConstructorsList=b.MRData.StatusTable.Status;break;case"status":default:a.ConstructorsList=b.MRData.StatusTable.Status}})}]).controller("DriversCtrl",["$scope","ergastAPIservice","wikiApiService","$routeParams",function(a,b,c,d){a.$routeParams=d;var e=d.year,f=d.driverID,g=d.filter;b.getDrivers(e,f,g).success(function(d){f||(a.DriversList=[],a.DriversList=d.MRData.DriverTable.Drivers),f&&(a.DriverStatus=[],a.DriverStatus=DriverStatus=d.MRData.StatusTable,b.getDriverWikiLink(f).success(function(b){a.DriverWikiLink=b.MRData.DriverTable.Drivers[0].url,c.getDriverInfo(a.DriverWikiLink).success(function(b){a.DriverBio=[];var c=b.query.pages;for(var d in c)c.hasOwnProperty(d)&&(a.DriverBio=b.query.pages[d].revisions[0]["*"])}).error(function(b){a.DriverBio=b})}))})}]).controller("CircuitsCtrl",["$scope","ergastAPIservice","$routeParams",function(a,b,c){a.CircuitsList=[],a.$routeParams=c;{var d=c.year;c.round,c.standingsFor}b.getCircuits(d).success(function(b){a.CircuitsList=b.MRData.CircuitTable.Circuits})}]).controller("RaceScheduleCtrl",["$scope","ergastAPIservice","$routeParams",function(a,b,c){a.StandingsList=[],a.$routeParams=c;var d=c.year,e=c.round,f=c.standingsFor;b.getStandings(d,e,f).success(function(b){a.StandingsList="driver"===f?b.MRData.StandingsTable.StandingsLists[0].DriverStandings:b.MRData.StandingsTable.StandingsLists[0].ConstructorStandings})}]).controller("DashboardCtrl",["$scope","ergastAPIservice","$routeParams",function(a,b){function c(a){var b=new Date,c=60*b.getTimezoneOffset()*-1,d=a.time,e=d.slice(0,-1),f=e.split(":"),g=60*+f[0]*60+60*+f[1]+ +f[2],h=g+c,i=parseInt(h,10),j=Math.floor(i/3600),k=Math.floor((i-3600*j)/60),l=i-3600*j-60*k;10>j&&(j="0"+j),10>k&&(k="0"+k),10>l&&(l="0"+l);var m=j+":"+k+":"+l;return m}a.nextEvent=[],a.prevEventResults=[],a.prevEventConstructorResults=[],b.getNextEvent().success(function(b){a.nextEvent=nextEvent=b.MRData.RaceTable.Races[0],a.local_time_next=c.toString()}),b.getPrevEventResults().success(function(b){a.prevEventResults=prevEventResults=b.MRData.RaceTable.Races[0],a.local_time_prev=c.toString()})}]),angular.module("F1Feed.services",[]).factory("ergastAPIservice",["$http",function(a){var b,c={};return c.getStandings=function(c,d,e){return b=d?"http://ergast.com/api/f1/"+c+"/"+d+"/"+e+"Standings.json?callback=JSON_CALLBACK":"http://ergast.com/api/f1/"+c+"/"+e+"Standings.json?callback=JSON_CALLBACK",a({method:"JSONP",url:b})},c.getConstructors=function(c,d,e){return b=d?e?"http://ergast.com/api/f1/"+c+"/constructors/"+d+"/"+e+".json?callback=JSON_CALLBACK":"http://ergast.com/api/f1/"+c+"/constructors/"+d+"/status.json?callback=JSON_CALLBACK":"http://ergast.com/api/f1/"+c+"/constructors.json?callback=JSON_CALLBACK",a({method:"JSONP",url:b})},c.getDrivers=function(c,d,e){return b=d?e?"http://ergast.com/api/f1/"+c+"/drivers/"+d+"/"+e+".json?callback=JSON_CALLBACK":"http://ergast.com/api/f1/"+c+"/drivers/"+d+"/status.json?callback=JSON_CALLBACK":"http://ergast.com/api/f1/"+c+"/drivers.json?callback=JSON_CALLBACK",a({method:"JSONP",url:b})},c.getDriverWikiLink=function(c){return b="http://ergast.com/api/f1/drivers/"+c+".json?callback=JSON_CALLBACK",a({method:"JSONP",url:b})},c.getCircuits=function(c){return b="http://ergast.com/api/f1/"+c+"/circuits.json?callback=JSON_CALLBACK",a({method:"JSONP",url:b})},c.getNextEvent=function(){return b="http://ergast.com/api/f1/current/next.json?callback=JSON_CALLBACK",a({method:"JSONP",url:b})},c.getPrevEventResults=function(){return b="http://ergast.com/api/f1/current/last/results.json?limit=3&callback=JSON_CALLBACK",a({method:"JSONP",url:b})},c}]).factory("wikiApiService",["$http",function(a){var b={};return b.getDriverInfo=function(b){var c=b.split("wiki/"),d=c[1],e="http://en.wikipedia.org/w/api.php?action=query&prop=revisions&format=json&rvprop=content&rvlimit=1&rvparse=&rvsection=0&rvcontentformat=text%2Fplain&titles="+d+"&callback=JSON_CALLBACK";return a({method:"JSONP",url:e})},b}]);